<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Parameters._bailout" Value="1E+200" />
  <Entry Key="Formula.Parameters._jq" Value="0" />
  <Entry Key="Formula.Parameters._parameter1" Value="1" />
  <Entry Key="Formula.Parameters._parameter2" Value="0.5" />
  <Entry Key="Formula.Parameters._parameter3" Value="0.5" />
  <Entry Key="Formula.Parameters._parameter4" Value="3" />
  <Entry Key="Formula.Parameters._parameter5" Value="3" />
  <Entry Key="Formula.Parameters._parameter6" Value="1" />
  <Entry Key="Formula.Parameters._q" Value="0" />
  <Entry Key="Formula.Parameters._qpara1" Value="0" />
  <Entry Key="Formula.Parameters._qpara2" Value="0" />
  <Entry Key="Formula.Parameters.cut" Value="0" />
  <Entry Key="Formula.Parameters.inverse" Value="0" />
  <Entry Key="Formula.Parameters.is2d" Value="0" />
  <Entry Key="Formula.Parameters.minz" Value="-0.999999999999999945" />
  <Entry Key="Formula.Static.Cycles" Value="144" />
  <Entry Key="Formula.Static.Julia" Value="0" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="public double _parameter1;&#xA;public double _parameter2;&#xA;public double _parameter3;&#xA;public double _parameter4;&#xA;public double _parameter5;&#xA;public double _parameter6;&#xA;public double _qpara1;&#xA;public double _qpara2;&#xA;public double _q;&#xA;public double _jq;&#xA;public bool is2d;&#xA;public double _bailout;&#xA;public bool cut;&#xA;public bool inverse;&#xA;public double minz;&#xA;// http://www.fractalforums.com/new-theories-and-research/revisiting-the-riemann-sphere-(again)/&#xA;// Riemann sphere flower by msltoe&#xA;public override bool GetBool(double x, double y, double z)&#xA;{&#xA;  if(cut&amp;&amp;y&gt;0) return inverse;&#xA;  double q;&#xA;  double jx, jy, jz,jq;&#xA;  if (_isJulia)&#xA;  {&#xA;    jx = _jx;&#xA;    jy = _jy;&#xA;    jz = _jz;&#xA;    q=_q;&#xA;    jq=_jq;&#xA;  }&#xA;  else&#xA;  {&#xA;    jx = x;&#xA;    jy = y;&#xA;    jz = z;&#xA;    jq=_q;&#xA;    x = _jx;&#xA;    y = _jy;&#xA;    z = _jz;&#xA;    q=_jq;&#xA;  }&#xA;  for (int i = 1;i&lt; _cycles;  i++)&#xA;  {&#xA;    double xx = x * x;&#xA;    double yy = y * y;&#xA;    double zz = z * z;&#xA;    double qq = q * q;&#xA;    double r = Math.Sqrt(xx + yy + zz+qq);&#xA;    if (r &gt; _bailout) return is2d;&#xA;    if(r&gt;0 )&#xA;    {&#xA;      if(i&gt;3)&#xA;      {&#xA;        Red+=xx/r;&#xA;        Green+=yy/r;&#xA;        Blue+=zz/r;&#xA;      }&#xA;      x/=r;&#xA;      y/=r;&#xA;      z/=r;&#xA;      q/=r;&#xA;    }&#xA;    double z2=1.0-z;&#xA;    if(z2!=0)&#xA;    {&#xA;      double x1 = x/z2;&#xA;      double y1 = y/z2;&#xA;      double z1 = (r-_parameter1)*(1.0+x1*x1+y1*y1);&#xA;      double q1=q/z2;&#xA;      if (z1&lt;minz) return is2d;&#xA;      x1 = x1 - Math.Floor(x1+_parameter2);&#xA;      y1 = y1 - Math.Floor(y1+_parameter3);&#xA;      q1 = q1 - Math.Floor(q1+_qpara1);&#xA;      x=_parameter4*x1;&#xA;      y=_parameter5*y1;&#xA;      z=_parameter6*z1;&#xA;      q = _qpara1*q1;&#xA;    }&#xA;/*&#xA;    zz=z*z;&#xA;    yy=y*y;&#xA;    y=2.0*z*y;&#xA;    z=zz-yy;&#xA;*/&#xA;    x+=jx;&#xA;    y+=jy;&#xA;    z+=jz;&#xA;    q+=jq;&#xA;  }&#xA;  return true;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="14" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1E-17" />
  <Entry Key="Renderer.ColorFactor.Green" Value="0.1" />
  <Entry Key="Renderer.ColorFactor.Red" Value="0.1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="1" />
  <Entry Key="Renderer.ColorFactor.Threshold" Value="1.6" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorInside" Value="1" />
  <Entry Key="Renderer.ColorIntensity" Value="1" />
  <Entry Key="Renderer.ColorOutside" Value="0" />
  <Entry Key="Scene.CenterX" Value="0.0250000000000001" />
  <Entry Key="Scene.CenterY" Value="0.366666666666667" />
  <Entry Key="Scene.CenterZ" Value="0.0116224793258047" />
  <Entry Key="Scene.Radius" Value="5" />
  <Entry Key="Transformation.Camera.AngleX" Value="0" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="1" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
</ParameterDict>