<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Static.Cycles" Value="44" />
  <Entry Key="Formula.Static.Julia" Value="0" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="// Tetrabrot&#xA;public override bool GetBool(double x,double y,double z)&#xA;{&#xA;  double jx, jy, jz;&#xA;  if (_isJulia)&#xA;  {&#xA;    jx = _jx;&#xA;    jy = _jy;&#xA;    jz = _jz;&#xA;  }&#xA;  else&#xA;  {&#xA;    jx = x;&#xA;    jy = y;&#xA;    jz = z;&#xA;    x = _jx;&#xA;    y = _jy;&#xA;    z = _jz;&#xA;  }&#xA;&#xA;  double w=0;&#xA;  for (int i = 1;i &lt; _cycles; i++)&#xA;  {&#xA;    double xx=x*x;&#xA;    double yy=y*y;&#xA;    double zz=z*z;&#xA;    double r=xx+yy+zz;&#xA;    if(r&gt;5) return false;&#xA;    if(r&gt;0.00001)&#xA;{&#xA;Red+=xx/r;&#xA;Green+=yy/r;&#xA;Blue+=zz/r;&#xA;}&#xA;&#xA;// -- -- --  Formula -- -- -- -- &#xA;&#xA;    double b=y;&#xA;    double c=z;&#xA;    y=2*(x*y - z*w);&#xA;    z=2*(x*z - b*w);&#xA;    w=2*(x*w + b*c);&#xA;    x=xx - yy - zz + w*w;&#xA;    &#xA;    &#xA;// -- -- -- -- -- -- -- -- -- --&#xA;&#xA;    x+=jx;&#xA;    y+=jy;&#xA;    z+=jz;&#xA;  }&#xA;  return true;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="4" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1" />
  <Entry Key="Renderer.ColorFactor.Green" Value="1" />
  <Entry Key="Renderer.ColorFactor.Red" Value="1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="1" />
  <Entry Key="Renderer.ColorFactor.Threshold" Value="1" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorInside" Value="0" />
  <Entry Key="Renderer.ColorIntensity" Value="1" />
  <Entry Key="Renderer.ColorOutside" Value="1" />
  <Entry Key="Scene.CenterX" Value="-1.07775124077656" />
  <Entry Key="Scene.CenterY" Value="0.748779361470626" />
  <Entry Key="Scene.CenterZ" Value="-0.385665873096381" />
  <Entry Key="Scene.Radius" Value="1.66666666666667" />
  <Entry Key="Transformation.Camera.AngleX" Value="-23.9282554681318" />
  <Entry Key="Transformation.Camera.AngleY" Value="-3.38705086046143" />
  <Entry Key="Transformation.Camera.AngleZ" Value="31.3275578750728" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="0" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
</ParameterDict>