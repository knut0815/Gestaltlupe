<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Static.Cycles" Value="66" />
  <Entry Key="Formula.Static.Julia" Value="1" />
  <Entry Key="Formula.Static.jx" Value="3" />
  <Entry Key="Formula.Static.jy" Value="0.2" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="&#xA;&#xA;public override bool GetBool(double x,double y,double z)&#xA;{&#xA;  double jx, jy, jz;&#xA;  if (_isJulia)&#xA;  {&#xA;    jx = _jx;&#xA;    jy = _jy;&#xA;    jz = _jz;&#xA;  }&#xA;  else&#xA;  {&#xA;    jx = x;&#xA;    jy = y;&#xA;    jz = z;&#xA;    x = _jx;&#xA;    y = _jy;&#xA;    z = _jz;&#xA;  }&#xA;  for (int n = 1;n &lt; _cycles;  n++)&#xA;  {&#xA;    double xx=x*x;&#xA;    double yy=y*y;&#xA;    double zz=z*z;&#xA;    double r=xx+yy+zz;&#xA;    if(r&gt;5) return false;&#xA;&#xA;    // -- -- --  Formula -- -- -- --&#xA;&#xA;&#xA;    double oc = x - xx + yy;&#xA;    double od = 2*(-x * y)+y;&#xA;    x = jx * oc - jy * od;&#xA;    y = jy * oc + jx *od;&#xA;&#xA;&#xA;    // -- -- -- -- -- -- -- -- -- --&#xA;&#xA;  }&#xA;  return true;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="4" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1" />
  <Entry Key="Renderer.ColorFactor.Green" Value="1" />
  <Entry Key="Renderer.ColorFactor.Red" Value="1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="1" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorInside" Value="0" />
  <Entry Key="Renderer.ColorIntensity" Value="1" />
  <Entry Key="Renderer.ColorOutside" Value="0" />
  <Entry Key="Scene.CenterX" Value="0.526444110667119" />
  <Entry Key="Scene.CenterY" Value="0.0798334599495815" />
  <Entry Key="Scene.CenterZ" Value="1.99730374603972" />
  <Entry Key="Scene.Radius" Value="0.803755144032923" />
  <Entry Key="Transformation.Camera.AngleX" Value="76.9571173642969" />
  <Entry Key="Transformation.Camera.AngleY" Value="-0.487313962346916" />
  <Entry Key="Transformation.Camera.AngleZ" Value="-6.82294829598194" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="0" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
</ParameterDict>