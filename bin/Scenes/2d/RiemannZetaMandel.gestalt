<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Parameters.itskip" Value="22" />
  <Entry Key="Formula.Parameters.maxbail" Value="0" />
  <Entry Key="Formula.Parameters.minbail" Value="0.237015" />
  <Entry Key="Formula.Parameters.minbail2" Value="0" />
  <Entry Key="Formula.Parameters.zetacount" Value="33" />
  <Entry Key="Formula.Static.Cycles" Value="33" />
  <Entry Key="Formula.Static.Julia" Value="1" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="14.11" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.jzz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="public double zetacount;&#xA;public double maxbail;&#xA;public double minbail;&#xA;public double minbail2;&#xA;public double itskip;&#xA;// Zeta&#xA;public override bool GetBool(double x, double y, double z)&#xA;{&#xA;  if(x&gt;0.5)Green=1;&#xA;  double jx, jy, jz;&#xA;  if (_isJulia)&#xA;  {&#xA;    jx = _jx;&#xA;    jy = _jy;&#xA;    jz = _jz;&#xA;  }&#xA;  else&#xA;  {&#xA;    jx = x;&#xA;    jy = y;&#xA;    jz = z;&#xA;    x = _jx;&#xA;    y = _jy;&#xA;    z = _jz;&#xA;  }&#xA;  for(int i=0;i&lt;_cycles;  i++)&#xA;  {&#xA;    var s=new Complex(x,y);&#xA;    Complex c=Zeta(s);&#xA;    if(i&gt;itskip)&#xA;    {&#xA;      if(minbail!=0 &amp;&amp; c.Magnitude&lt;minbail)&#xA;      {&#xA;        Red=1;&#xA;        return true;&#xA;      }&#xA;    }&#xA;    x=c.Real;&#xA;    y=c.Imaginary;&#xA;    x+=jx;&#xA;    y+=jy;&#xA;  }&#xA;  return true;&#xA;}&#xA;public Complex Zeta(Complex c)&#xA;{&#xA;  var z0=Complex.Zero;&#xA;  double a0=c.Real;&#xA;  double t=c.Imaginary;&#xA;  for (double n = 1.0;n &lt; zetacount;  n++)&#xA;  {&#xA;    var direction=n%2==0 ?Math.PI:0;&#xA;    var newTerm=Complex.Exp(new Complex(-Math.Log(n)*a0, -Math.Log(n)*t+direction));&#xA;    z0+=newTerm;&#xA;  }&#xA;  return z0;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="16" />
  <Entry Key="Renderer.2D.Quality" Value="2" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1" />
  <Entry Key="Renderer.ColorFactor.Green" Value="1" />
  <Entry Key="Renderer.ColorFactor.Red" Value="1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="1" />
  <Entry Key="Renderer.ColorFactor.Threshold" Value="0" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorInside" Value="1" />
  <Entry Key="Renderer.ColorIntensity" Value="1" />
  <Entry Key="Renderer.ColorOutside" Value="0" />
  <Entry Key="Scene.CenterX" Value="-0.866818936057499" />
  <Entry Key="Scene.CenterY" Value="-0.0312499999999996" />
  <Entry Key="Scene.CenterZ" Value="5.22088835350193E-15" />
  <Entry Key="Scene.Radius" Value="10" />
  <Entry Key="Transformation.Camera.AngleX" Value="-90" />
  <Entry Key="Transformation.Camera.AngleY" Value="90" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="1" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
  <Entry Key="View.Deph" Value="300" />
  <Entry Key="View.DephAdd" Value="0" />
  <Entry Key="View.Renderer" Value="2d" />
  <Entry Key="View.UpdateSteps" Value="0" />
</ParameterDict>