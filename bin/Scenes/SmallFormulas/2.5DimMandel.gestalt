<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Static.Cycles" Value="166" />
  <Entry Key="Formula.Static.Julia" Value="0" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="// 2.5 Dim Julia Set&#xA;public override bool GetBool(double jx,double jy,double jz)&#xA;{&#xA;  double x=0,y=0,z=0;&#xA;  for (int i = 1;i &lt; _cycles;  i++)&#xA;  {&#xA;    double xx = x*x;&#xA;    double yy = y*y;&#xA;    double zz = z*z;&#xA;    double r = xx + yy+zz;&#xA;    if (r&gt;50) return false;&#xA;    if (r&lt;0.05 &amp;&amp; i&gt;1) return true;&#xA;    y = 2*x*y + jy;&#xA;    x = xx - yy  + jx;&#xA;    z = z*Math.Sqrt( (xx+yy + 100*zz) ) + jz;&#xA;  }&#xA;  return true;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="4" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1" />
  <Entry Key="Renderer.ColorFactor.Green" Value="1" />
  <Entry Key="Renderer.ColorFactor.Red" Value="1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="1" />
  <Entry Key="Renderer.ColorFactor.Threshold" Value="0" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorInside" Value="0" />
  <Entry Key="Renderer.ColorIntensity" Value="1" />
  <Entry Key="Renderer.ColorOutside" Value="0" />
  <Entry Key="Scene.CenterX" Value="-0.734052027648578" />
  <Entry Key="Scene.CenterY" Value="0.338057026139254" />
  <Entry Key="Scene.CenterZ" Value="-0.00251123380514281" />
  <Entry Key="Scene.Radius" Value="2.00914791819211" />
  <Entry Key="Transformation.Camera.AngleX" Value="45.3856138954129" />
  <Entry Key="Transformation.Camera.AngleY" Value="-7.10269697305029" />
  <Entry Key="Transformation.Camera.AngleZ" Value="11.2266603380381" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="0" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
</ParameterDict>