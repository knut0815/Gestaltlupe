<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Static.Cycles" Value="8" />
  <Entry Key="Formula.Static.Julia" Value="0" />
  <Entry Key="Formula.Static.jx" Value="0" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Formula.Static.MinCycle" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="// Menger Sponge Tree&#xA;public override bool GetBool(double x,double y,double z)&#xA;{&#xA;  double sin45 = Math.Sqrt(0.5);&#xA;  double scale = 1.81;&#xA;  double offsetX = 1.15;&#xA;  double offsetY = 0.932;&#xA;  double offsetZ = 1.01;&#xA;  for (int n=1;n&lt;100;n++)&#xA;  {&#xA;    x = Math.Abs(x);&#xA;    y = Math.Abs(y);&#xA;    z = Math.Abs(z);&#xA;    // Bailout Condition:&#xA;    if (x&gt;2) return false;&#xA;    if (y&gt;2) return false;&#xA;    if (z&gt;2) return false;&#xA;    if (x&lt;y) { double a=x; x=y; y=a; }&#xA;    if (x&lt;z) { double a=x; x=z; z=a; }&#xA;    if (y&lt;z) { double a=y; y=z; z=a; }&#xA;    x = scale*x - offsetX*(scale-1);&#xA;    y = scale*y - offsetY*(scale-1);&#xA;    z = scale*z - offsetZ*(scale-1);&#xA;    // Rotate x,y plane by 45 degree:&#xA;    double xtemp = sin45 * ( x - y );&#xA;    y = sin45 * ( y + x );&#xA;    x = xtemp;&#xA;  }&#xA;  return true;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="7" />
  <Entry Key="Renderer.ColorFactor.Blue" Value="1" />
  <Entry Key="Renderer.ColorFactor.Green" Value="1" />
  <Entry Key="Renderer.ColorFactor.Red" Value="1" />
  <Entry Key="Renderer.ColorFactor.RgbType" Value="1" />
  <Entry Key="Renderer.ColorGreyness" Value="0" />
  <Entry Key="Renderer.ColorInside" Value="0" />
  <Entry Key="Renderer.ColorIntensity" Value="1" />
  <Entry Key="Renderer.ColorOutside" Value="0" />
  <Entry Key="Scene.CenterX" Value="0" />
  <Entry Key="Scene.CenterY" Value="0.0152330711305452" />
  <Entry Key="Scene.CenterZ" Value="0" />
  <Entry Key="Scene.Radius" Value="0.418622470850482" />
  <Entry Key="Transformation.Camera.AngleX" Value="0" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="1" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
</ParameterDict>