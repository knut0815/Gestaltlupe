<?xml version="1.0" encoding="utf-8"?>
<ParameterDict>
  <Entry Key="Formula.Static.Cycles" Value="44" />
  <Entry Key="Formula.Static.Julia" Value="1" />
  <Entry Key="Formula.Static.jx" Value="0.325" />
  <Entry Key="Formula.Static.jy" Value="0" />
  <Entry Key="Formula.Static.jz" Value="0" />
  <Entry Key="Intern.Formula.Source" Value="// 2.5 Dim Julia Set&#xA;public override bool GetBool(double x,double y,double z)&#xA;{&#xA;  for (int n = 1;n &lt; _cycles;  n++)&#xA;  {&#xA;    double xx=x*x;&#xA;    double yy=y*y;&#xA;    double zz=z*z;&#xA;    double r=xx+yy+zz;&#xA;    if(r&gt;5) return false;&#xA;    if(r&lt;0.1) return true;&#xA;    {&#xA;      y=2*x*y+_jy;&#xA;      x=xx-yy+_jx;&#xA;      z=-z*Math.Sqrt(xx+yy+2.0*zz)+_jz;&#xA;    }&#xA;  }&#xA;  return true;&#xA;}&#xA;" />
  <Entry Key="Intern.Version" Value="4" />
  <Entry Key="Scene.CenterX" Value="0" />
  <Entry Key="Scene.CenterY" Value="0" />
  <Entry Key="Scene.CenterZ" Value="0.24" />
  <Entry Key="Scene.Radius" Value="2.16" />
  <Entry Key="Transformation.Camera.AngleX" Value="90" />
  <Entry Key="Transformation.Camera.AngleY" Value="0" />
  <Entry Key="Transformation.Camera.AngleZ" Value="0" />
  <Entry Key="Transformation.Camera.IsometricProjection" Value="0" />
  <Entry Key="Transformation.Camera.Position" Value="1" />
</ParameterDict>